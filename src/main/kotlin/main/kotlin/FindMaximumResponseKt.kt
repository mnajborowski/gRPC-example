//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: calculator.proto

@kotlin.jvm.JvmName("-initializefindMaximumResponse")
public inline fun findMaximumResponse(block: FindMaximumResponseKt.Dsl.() -> kotlin.Unit): FindMaximumResponse =
  FindMaximumResponseKt.Dsl._create(FindMaximumResponse.newBuilder()).apply { block() }._build()
public object FindMaximumResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: FindMaximumResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: FindMaximumResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): FindMaximumResponse = _builder.build()

    /**
     * <code>int32 maximum = 1;</code>
     */
    public var maximum: kotlin.Int
      @JvmName("getMaximum")
      get() = _builder.getMaximum()
      @JvmName("setMaximum")
      set(value) {
        _builder.setMaximum(value)
      }
    /**
     * <code>int32 maximum = 1;</code>
     */
    public fun clearMaximum() {
      _builder.clearMaximum()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun FindMaximumResponse.copy(block: FindMaximumResponseKt.Dsl.() -> kotlin.Unit): FindMaximumResponse =
  FindMaximumResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

